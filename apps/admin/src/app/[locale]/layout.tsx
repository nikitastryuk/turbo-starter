import type { Metadata } from 'next';
import { Inter } from 'next/font/google';

import '@llmaid/system//globals.css';
import '../globals.css';

import { notFound } from 'next/navigation';

import { NextIntlClientProvider } from 'next-intl';

import { Providers } from '~/Providers';

export function generateStaticParams() {
  return [{ locale: 'en' }, { locale: 'uk' }];
}

const inter = Inter({ subsets: ['latin'] });

type Messages = Record<string, string>;

export const metadata: Metadata = {
  title: 'Admin',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  let messages: Messages;
  try {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    messages = (await import(`../../messages/${locale}.json`)).default as Messages;
  } catch (error) {
    console.error(error);
    notFound();
  }
  console.log(locale);
  return (
    <html lang={locale} suppressHydrationWarning>
      <body className={inter.className}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Providers>{children}</Providers>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
